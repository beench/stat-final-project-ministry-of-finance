{"version":3,"sources":["components/Regression/LinearRegression.js","components/Regression/Regression.js","components/Feature Selection/FeatureAreaChart.js","components/Feature Selection/FeatureBarGroup.js","components/Feature Selection/FeatureBarChart.js","components/Feature Selection/FeatureSelection.js","components/Data Source/DataSource.js","App.js","serviceWorker.js","index.js"],"names":["data","year","real","pred","LineBudget","react_default","a","createElement","Fragment","className","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","label","value","angle","position","dx","type","stroke","activeDot","r","PureComponent","jsfiddleUrl","Regression","LinearRegression_LineBudget","React","Component","name","budget","FeatureBarChart","fill","PMQA","CGD","Excise","PDMO","BarGroup","FeatureBar","FeatureSelection","FeatureBarGroup_BarGroup","FeatureBarChart_FeatureBar","FeatureAreaChart_FeatureBarChart","DataSource","href","App","FeatureSelection_FeatureSelection","Regression_Regression","DataSource_DataSource","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRAYMA,EAAO,CACX,CACEC,KAAM,OACNC,KAAM,OACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,OACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,OACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,OACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,OACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,SACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,SACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,SACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,SACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,SACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,SACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,SACNC,KAAM,eAER,CACEF,KAAM,OACNC,KAAM,OACNC,KAAM,gBAIWC,mLAIjB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,2YACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACED,UAAU,kBACVE,MAAO,IACPC,OAAQ,IACRZ,KAAMA,EACNa,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGVZ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAeQ,gBAAgB,QAC/Bb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOS,QAAQ,SACfd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOU,OAAQ,CAAC,MAASC,MAAO,CAAEC,MAAO,wBAAyBC,OAAQ,GAAKC,SAAU,aAAcC,IAAK,MAC5GpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEgB,KAAK,WACLP,QAAQ,OACRQ,OAAO,UACPC,UAAW,CAAEC,EAAG,KAElBxB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEgB,KAAK,WACLP,QAAQ,OACRQ,OAAO,UACPC,UAAW,CAAEC,EAAG,KAElBxB,EAAAC,EAAAC,cAACG,EAAA,EAAD,gBArC4BoB,iBAAnB1B,EACZ2B,YAAc,iDC9EFC,mLAEjB,OACE3B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,ucAKEF,EAAAC,EAAAC,cAAA,WALF,uEAQEF,EAAAC,EAAAC,cAAA,WARF,oEAWEF,EAAAC,EAAAC,cAAA,WAXF,yEAcEF,EAAAC,EAAAC,cAAA,WAdF,wEAiBEF,EAAAC,EAAAC,cAAA,WAjBF,sDAmBEF,EAAAC,EAAAC,cAAA,WAnBF,kJAsBEF,EAAAC,EAAAC,cAAA,WAtBF,mWA0BFF,EAAAC,EAAAC,cAAC0B,EAAD,cAhCgCC,IAAMC,WCUxCnC,EAAO,CACX,CACEoC,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,UAEV,CACED,KAAM,OACNC,OAAQ,SAISC,mLAIjB,OACEjC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,sRACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACED,UAAU,kBACVE,MAAO,IACPC,OAAQ,IACRZ,KAAMA,EACNa,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGVZ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAeQ,gBAAgB,QAC/Bb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOS,QAAQ,SACfd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOU,OAAQ,CAAC,KAAQ,MAASC,MAAO,CAAEC,MAAO,wBAAyBC,OAAQ,GAAKC,SAAU,aAAcC,IAAK,MACpHpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEgB,KAAK,WACLP,QAAQ,SACRQ,OAAO,UACPY,KAAK,UACLX,UAAW,CAAEC,EAAG,KAElBxB,EAAAC,EAAAC,cAACG,EAAA,EAAD,gBAhCiCwB,IAAMC,WAA9BG,EACZP,YAAc,6CCzDvB,IAAM/B,EAAO,CACX,CACEC,KAAM,OACNuC,KAAM,MACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,UAER,CACE1C,KAAM,OACNuC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,UAER,CACE1C,KAAM,OACNuC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,WAIWC,mLAIjB,OACEvC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,qWAA+DF,EAAAC,EAAAC,cAAA,WAA/D,8JACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACED,UAAU,kBACVE,MAAO,IACPC,OAAQ,IACRZ,KAAMA,EACNa,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGVZ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAeQ,gBAAgB,QAC/Bb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOS,QAAQ,SACfd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOU,OAAQ,CAAC,IAAK,MAAOC,MAAO,CAAEC,MAAO,wBAAyBC,OAAQ,GAAKC,SAAU,aAAcC,IAAK,MAC/GpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKS,QAAQ,OAAOoB,KAAK,aACzBlC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKS,QAAQ,MAAMoB,KAAK,YACxBlC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKS,QAAQ,SAASoB,KAAK,sBA3BDT,iBAAjBc,EACZb,YAAc,6CCzBvB,IAAM/B,EAAO,CACX,CACEC,KAAM,OACNuC,KAAM,MACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,UAER,CACE1C,KAAM,OACNuC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,UAER,CACE1C,KAAM,OACNuC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,WAIWE,mLAIjB,OACExC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,oWACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACED,UAAU,kBACVE,MAAO,IACPC,OAAQ,IACRZ,KAAMA,EACNa,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGVZ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAeQ,gBAAgB,QAC/Bb,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOS,QAAQ,SACfd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOU,OAAQ,CAAC,KAAQ,MAASC,MAAO,CAAEC,MAAO,wBAAyBC,OAAQ,GAAKC,SAAU,aAAcC,IAAK,MACpHpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKS,QAAQ,OAAOoB,KAAK,sBAzBGL,IAAMC,WAAzBU,EACZd,YAAc,iDChCFe,mLAEjB,OACEzC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,sWAEoE,IAClEF,EAAAC,EAAAC,cAAA,WAHF,mNAKEF,EAAAC,EAAAC,cAAA,WALF,8HAOEF,EAAAC,EAAAC,cAAA,WAPF,iIASEF,EAAAC,EAAAC,cAAA,WATF,6MAWEF,EAAAC,EAAAC,cAAA,WAXF,iHAeFF,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAb,4jBAE0BJ,EAAAC,EAAAC,cAAA,YAE1BF,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAb,8zBACwLJ,EAAAC,EAAAC,cAAA,YAExLF,EAAAC,EAAAC,cAAC0C,EAAD,cA9BsCf,IAAMC,WCH/Be,mLAEjB,OACE7C,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,cAEEJ,EAAAC,EAAAC,cAAA,WAFF,KAGK,IACHF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,kEAAR,gTAGA9C,EAAAC,EAAAC,cAAA,WAPF,KAQK,IACHF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,mFAAR,8OAGA9C,EAAAC,EAAAC,cAAA,WAZF,KAaK,IACHF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,oEAAR,oGAGA9C,EAAAC,EAAAC,cAAA,WAjBF,KAkBK,IACHF,EAAAC,EAAAC,cAAA,KAAG4C,KAAK,+HAAR,mTAvB8BjB,IAAMC,WCqB/BiB,MAjBf,WACE,OACE/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,uBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAf,yFAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,OAEFlD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aCND+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c36d3040.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Brush\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    year: \"2550\",\r\n    real: 174189,\r\n    pred: 179205.625763\r\n  },\r\n  {\r\n    year: \"2551\",\r\n    real: 179672,\r\n    pred: 179543.742926\r\n  },\r\n  {\r\n    year: \"2552\",\r\n    real: 201565.0,\r\n    pred: 200263.085797\r\n  },\r\n  {\r\n    year: \"2553\",\r\n    real: 215258.0,\r\n    pred: 216905.836199\r\n  },\r\n  {\r\n    year: \"2554\",\r\n    real: 208384.0,\r\n    pred: 210151.034266\r\n  },\r\n  {\r\n    year: \"2555\",\r\n    real: 191415.1,\r\n    pred: 191225.054668\r\n  },\r\n  {\r\n    year: \"2556\",\r\n    real: 180707.9,\r\n    pred: 180456.677434\r\n  },\r\n  {\r\n    year: \"2557\",\r\n    real: 228796.6,\r\n    pred: 232720.446337\r\n  },\r\n  {\r\n    year: \"2558\",\r\n    real: 185852.2,\r\n    pred: 187997.045296\r\n  },\r\n  {\r\n    year: \"2559\",\r\n    real: 199174.1,\r\n    pred: 197583.261887\r\n  },\r\n  {\r\n    year: \"2560\",\r\n    real: 217713.6,\r\n    pred: 215616.161528\r\n  },\r\n  {\r\n    year: \"2561\",\r\n    real: 238246.9,\r\n    pred: 236508.101152\r\n  },\r\n  {\r\n    year: \"2562\",\r\n    real: 242948.0,\r\n    pred: 242857.018431\r\n  }\r\n];\r\n\r\nexport default class LineBudget extends PureComponent {\r\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/xqjtetw0/\";\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-card\">\r\n          <h4>กราฟแสดงค่าจริงและค่า predict ของงบประมาณกระทรวงการคลังทั้งหมดในแต่ละปี</h4>\r\n          <LineChart\r\n            className=\"container-chart\"\r\n            width={850}\r\n            height={450}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 40,\r\n              bottom: 5\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"year\" />\r\n            <YAxis domain={[160000]} label={{ value: 'Budget (Million Baht)', angle: -90,  position: 'insideleft', dx: -60 }}/>\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"real\"\r\n              stroke=\"#ee5f64\"\r\n              activeDot={{ r: 7 }}\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"pred\"\r\n              stroke=\"#7ea5a4\"\r\n              activeDot={{ r: 7 }}\r\n            />\r\n            <Brush />\r\n          </LineChart>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport LinearRegression from \"./LinearRegression\";\r\n\r\nexport default class Regression extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"description\">\r\n          <h1>Regression</h1>\r\n          <p>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;นำข้อมูลที่ทำ Feature Selection แล้ว\r\n            มาทำ Linear Regression จะได้ค่า Mean Square Error =\r\n            3301.318, ค่า R-square 0.9856 ได้ค่า coeficient, Intercept และสมการ\r\n            ดังนี้\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- The coefficient for PDMO is\r\n            0.9954556746824181\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- The coefficient for CGD is\r\n            8.49338506035733\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- The coefficient for Excise is\r\n            1.1838443047683533\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- The coefficient for PMQA is\r\n            0.32892523418799435\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Intercept = 8115.242296558863\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;สมการคือ y\r\n            = 0.9954*XPMQA + 8.4934*XCGD + 1.1838*XExcise + 0.3289*XPDMO + 8115.2423\r\n            <br/>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;จากกราฟจะพบว่าโมเดลสามารถทำนายได้ใกล้เคียงกับค่าจริงมาก\r\n          </p>\r\n        </div>\r\n        <LinearRegression />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Brush,\r\n  Area,\r\n  AreaChart,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Label\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"2550\",\r\n    budget: 174189.3\r\n  },\r\n  {\r\n    name: \"2551\",\r\n    budget: 179672.4\r\n  },\r\n  {\r\n    name: \"2552\",\r\n    budget: 201565.7\r\n  },\r\n  {\r\n    name: \"2553\",\r\n    budget: 215258.6\r\n  },\r\n  {\r\n    name: \"2554\",\r\n    budget: 208384.5\r\n  },\r\n  {\r\n    name: \"2555\",\r\n    budget: 191415.1\r\n  },\r\n  {\r\n    name: \"2556\",\r\n    budget: 180707.9\r\n  },\r\n  {\r\n    name: \"2557\",\r\n    budget: 228796.6\r\n  },\r\n  {\r\n    name: \"2558\",\r\n    budget: 185852.2\r\n  },\r\n  {\r\n    name: \"2559\",\r\n    budget: 199174.1\r\n  },\r\n  {\r\n    name: \"2560\",\r\n    budget: 217713.6\r\n  },\r\n  {\r\n    name: \"2561\",\r\n    budget: 238246.9\r\n  },\r\n  {\r\n    name: \"2562\",\r\n    budget: 242948\r\n  }\r\n];\r\n\r\nexport default class FeatureBarChart extends React.Component {\r\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/30763kr7/\";\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-card\">\r\n          <h4>กราฟแสดงงบประมาณของกระทรวงการคลังตั้งแต่ปี 2550 - 2562</h4>\r\n          <AreaChart\r\n            className=\"container-chart\"\r\n            width={850}\r\n            height={450}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 40,\r\n              bottom: 5\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain={[150000, 250000]} label={{ value: 'Budget (Million Baht)', angle: -90,  position: 'insideleft', dx: -60 }} />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"budget\"\r\n              stroke=\"#97b5a3\"\r\n              fill=\"#526c5b\"\r\n              activeDot={{ r: 8 }}\r\n            />\r\n            <Brush/>\r\n          </AreaChart>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    year: \"2560\",\r\n    PMQA: 707.3,\r\n    CGD: 1389.8,\r\n    Excise: 2703.7,\r\n    PDMO: 193141.1\r\n  },\r\n  {\r\n    year: \"2561\",\r\n    PMQA: 1010.8,\r\n    CGD: 1462.3,\r\n    Excise: 2491.8,\r\n    PDMO: 213662.5\r\n  },\r\n  {\r\n    year: \"2562\",\r\n    PMQA: 1377.7,\r\n    CGD: 1834.3,\r\n    Excise: 4291.7,\r\n    PDMO: 216661.6\r\n  }\r\n];\r\n\r\nexport default class BarGroup extends PureComponent {\r\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/30763kr7/\";\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-card\">\r\n          <h4>กราฟแสดงงบประมาณของสำนักงานปลัดกระทรวงการคลัง กรมบัญชีกลาง <br/>และกรมสรรพสามิต ย้อนหลัง 3 ปี</h4>\r\n          <BarChart\r\n            className=\"container-chart\"\r\n            width={850}\r\n            height={450}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 40,\r\n              bottom: 5\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"year\" />\r\n            <YAxis domain={[200, 4800]} label={{ value: 'Budget (Million Baht)', angle: -90,  position: 'insideleft', dx: -60 }} />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"PMQA\" fill=\"#244c3c \" />\r\n            <Bar dataKey=\"CGD\" fill=\"#dcdcbb\" />\r\n            <Bar dataKey=\"Excise\" fill=\"#97b5a3\" />\r\n            {/* <Bar dataKey=\"PDMO\" fill=\"#82ca9d\" /> */}\r\n          </BarChart>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    year: \"2560\",\r\n    PMQA: 707.3,\r\n    CGD: 1389.8,\r\n    Excise: 2703.7,\r\n    PDMO: 193141.1\r\n  },\r\n  {\r\n    year: \"2561\",\r\n    PMQA: 1010.8,\r\n    CGD: 1462.3,\r\n    Excise: 2491.8,\r\n    PDMO: 213662.5\r\n  },\r\n  {\r\n    year: \"2562\",\r\n    PMQA: 1377.7,\r\n    CGD: 1834.3,\r\n    Excise: 4291.7,\r\n    PDMO: 216661.6\r\n  }\r\n];\r\n\r\nexport default class FeatureBar extends React.Component {\r\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/30763kr7/\";\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-card\">\r\n          <h4>กราฟแสดงงบประมาณของสำนักงานบริหารหนี้สาธารณะย้อนหลังสามปี</h4>\r\n          <BarChart\r\n            className=\"container-chart\"\r\n            width={850}\r\n            height={450}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 40,\r\n              bottom: 5\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"year\" />\r\n            <YAxis domain={[180000, 220000]} label={{ value: 'Budget (Million Baht)', angle: -90,  position: 'insideleft', dx: -60 }}/>\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"PDMO\" fill=\"#425e6a\" />\r\n          </BarChart>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport FeatureAreaChart from \"./FeatureAreaChart\";\r\nimport FeatureBarGroup from \"./FeatureBarGroup\";\r\nimport FeatureBarChart from \"./FeatureBarChart\";\r\n\r\nexport default class FeatureSelection extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"description\">\r\n          <h1>Feature Selection</h1>\r\n          <p>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;จากการทำ High Coefficient Filtering\r\n            และ Random Forest ทำให้เหลือ feature ที่มีความสำคัญอยู่ 4 ตัว คือ{\" \"}\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.PMQA หรือ สำนักงานปลัดกระทรวงการคลัง\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.CGD หรือ กรมบัญชีกลาง\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.Excise หรือ กรมสรรพสามิต\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.PDMO หรือ สำนักงานบริหารหนี้สาธารณะ\r\n            <br />\r\n            ได้กราฟดังต่อไปนี้\r\n          </p>\r\n        </div>\r\n        <FeatureBarGroup />\r\n        <p className=\"description\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;เนื่องจากสำนักงานบริหารหนี้สาธารณะมีงบประมาณที่สูงกว่าหน่วยงานอื่นมาก\r\n          ทำให้พลอตกราฟแยก ดังนี้ <br />\r\n        </p>\r\n        <FeatureBarChart />\r\n        <p className=\"description\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;จากข้อมูลงบประมาณการคลังที่ให้แก่แต่ละหน่วยงานภายในรายปี ตั้งแต่ปี 2550 - 2562 สามารถ plot กราฟแสดงงบประมาณรายปีของทุกหน่วยงานในกระทรวงการคลังได้ ดังนี้<br />\r\n        </p>\r\n        <FeatureAreaChart />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class DataSource extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"description\">\r\n          data source\r\n          <br />\r\n          1.{\" \"}\r\n          <a href=\"http://www.bb.go.th/topic-detail.php?id=6964&mid=545&catID=894\">\r\n            ข้อมูลงบประมาณรายปีของหน่วยงานย่อยในกระทรวงการคลัง\r\n          </a>\r\n          <br />\r\n          2.{\" \"}\r\n          <a href=\"http://dataservices.mof.go.th/Dataservices/GovernmentExpenditureEconomyMinistry\">\r\n            ข้อมูลงบประมาณรายเดือนของกระทรวงการคลัง\r\n          </a>\r\n          <br />\r\n          3.{\" \"}\r\n          <a href=\"http://dataservices.mof.go.th/Dataservices/GovernmentFinanceGFS1\">\r\n            ข้อมูลดุลการคลัง\r\n          </a>\r\n          <br />\r\n          4.{\" \"}\r\n          <a href=\"http://office.bangkok.go.th/budd/main/index.php?id=558&fbclid=IwAR1Bo_cR4BTjrBzI4Tg5L3wE2z_FEEdd4cwU-PgJlLh_nNKl3WFWLO1-MeU\">\r\n            ข้อมูลงบประมาณการคลังรายปีของจังหวัดกรุงเทพมหานคร\r\n          </a>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Regression from \"./components/Regression/Regression\"\nimport FeatureSelection from \"./components/Feature Selection/FeatureSelection\";\nimport DataSource from \"./components/Data Source/DataSource\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"Header\">\n        <div className=\"App-header\">Ministry of Finance</div>\n        <div className=\"App-subheader\">กระทรวงการคลัง</div>\n      </div>\n      <div className=\"Body\">\n        <FeatureSelection />\n        <Regression />\n        <DataSource />\n      </div>\n      <div className=\"footer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}